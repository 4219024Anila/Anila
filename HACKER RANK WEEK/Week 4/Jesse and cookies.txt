#include <stdio.h>
#include <stdlib.h>

#define MAX 1000000

// Min-heap
int heap[MAX];
int heapSize = 0;

void swap(int *a, int *b) {
    int temp = *a; *a = *b; *b = temp;
}

void heapifyUp(int i) {
    while (i > 0 && heap[(i - 1) / 2] > heap[i]) {
        swap(&heap[i], &heap[(i - 1) / 2]);
        i = (i - 1) / 2;
    }
}

void heapifyDown(int i) {
    int left = 2 * i + 1, right = 2 * i + 2, smallest = i;
    if (left < heapSize && heap[left] < heap[smallest]) smallest = left;
    if (right < heapSize && heap[right] < heap[smallest]) smallest = right;
    if (smallest != i) {
        swap(&heap[i], &heap[smallest]);
        heapifyDown(smallest);
    }
}

void insert(int val) {
    heap[heapSize] = val;
    heapifyUp(heapSize);
    heapSize++;
}

int extractMin() {
    if (heapSize == 0) return -1;
    int root = heap[0];
    heap[0] = heap[--heapSize];
    heapifyDown(0);
    return root;
}

int jesseAndCookies(int n, int k, int cookies[]) {
    heapSize = 0;
    for (int i = 0; i < n; i++) insert(cookies[i]);

    int ops = 0;
    while (heapSize > 1 && heap[0] < k) {
        int least = extractMin();
        int second = extractMin();
        int new_cookie = least + 2 * second;
        insert(new_cookie);
        ops++;
    }

    if (heap[0] >= k) return ops;
    return -1;
}

int main() {
    int n, k;
    scanf("%d %d", &n, &k);

    int cookies[n];
    for (int i = 0; i < n; i++) scanf("%d", &cookies[i]);

    int result = jesseAndCookies(n, k, cookies);
    printf("%d\n", result);

    return 0;
}