#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

char* validateBrackets(char *inputStr) {
    int length = strlen(inputStr), stackTop = -1;
    char *stack = malloc(length);

    for (int idx = 0; idx < length; idx++) {
        char currentChar = inputStr[idx];
        if (currentChar == '(' || currentChar == '[' || currentChar == '{') {
            stack[++stackTop] = currentChar;
        } else {
            if (stackTop < 0) {
                free(stack);
                return "NO";
            }
            char lastOpened = stack[stackTop--];
            if ((currentChar == ')' && lastOpened != '(') ||
                (currentChar == ']' && lastOpened != '[') ||
                (currentChar == '}' && lastOpened != '{')) {
                free(stack);
                return "NO";
            }
        }
    }
    free(stack);
    return (stackTop == -1) ? "YES" : "NO";
}

char* trimWhitespace(char* str) {
    while (isspace(*str)) str++;
    if (!*str) return str;
    char *endPtr = str + strlen(str) - 1;
    while (endPtr > str && isspace(*endPtr)) *endPtr-- = '\0';
    return str;
}

char* readInputLine() {
    size_t bufferSize = 1024, currentLength = 0;
    char *buffer = malloc(bufferSize);
    while (fgets(buffer + currentLength, bufferSize - currentLength, stdin)) {
        currentLength += strlen(buffer + currentLength);
        if (buffer[currentLength - 1] == '\n') {
            buffer[currentLength - 1] = '\0';
            break;
        }
        bufferSize *= 2;
        buffer = realloc(buffer, bufferSize);
    }
    return buffer;
}

int main() {
    int testCases; 
    scanf("%d\n", &testCases);
    while (testCases--) {
        char *inputLine = trimWhitespace(readInputLine());
        printf("%s\n", validateBrackets(inputLine));
        free(inputLine);
    }
    return 0;
}
